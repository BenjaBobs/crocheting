{"version":3,"file":"index.ca7950a6.js","sources":["../../vite/modulepreload-polyfill","../../src/Cell.ts","../../react/jsx-runtime","../../src/App.tsx","../../src/Grid.ts","../../src/main.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import { Grid } from './Grid';\n\nexport class Cell {\n  constructor(private grid: Grid, public row: number, public column: number) {\n    this.isCrossed = row % 2 === 0;\n  }\n\n  public update?: () => void;\n  public isMarked: boolean = false;\n  public isCrossed: boolean = false;\n  public isValid: boolean = true;\n\n  public toggle() {\n    this.isMarked = !this.isMarked;\n\n    let iterator = this.up();\n    while (iterator) {\n      iterator.recalculateState();\n      iterator = iterator.up();\n    }\n\n    this.recalculateState();\n\n    iterator = this.down();\n    while (iterator) {\n      iterator.recalculateState();\n      iterator = iterator.down();\n    }\n\n    this.recalculateState();\n    iterator = this.up();\n    while (iterator) {\n      iterator.recalculateState();\n      iterator = iterator.up();\n    }\n  }\n\n  private up() {\n    return this.grid.getCell(this.row - 1, this.column);\n  }\n\n  private down() {\n    return this.grid.getCell(this.row + 1, this.column);\n  }\n\n  private left() {\n    return this.grid.getCell(this.row, this.column - 1);\n  }\n\n  private right() {\n    return this.grid.getCell(this.row, this.column + 1);\n  }\n\n  private recalculateState() {\n    const initialCrossed = this.isCrossed;\n    const initialValid = this.isValid;\n\n    if (!this.isMarked) {\n      if (this.down()?.isCrossed || this.up()?.isCrossed)\n        this.isCrossed = false;\n      else this.isCrossed = this.row % 2 === 0;\n    } else {\n      if (\n        !this.up()?.isMarked &&\n        this.down()?.isMarked &&\n        this.down()?.down()?.isMarked\n      ) {\n        this.isCrossed = true;\n      } else {\n        this.isCrossed = false;\n      }\n    }\n\n    if (!this.isMarked || (this.up()?.isMarked && this.down()?.isMarked)) {\n      this.isValid = true;\n    } else if (!this.up()?.isMarked) {\n      this.isValid = !!(this.down()?.isMarked && this.down()?.down()?.isMarked);\n    } else if (!this.down()?.isMarked) {\n      this.isValid = !!(this.up()?.isMarked && this.up()?.up()?.isMarked);\n    }\n\n    if (this.isCrossed !== initialCrossed || this.isValid !== initialValid) {\n      this.update?.();\n    }\n  }\n}\n","import * as jsxRuntime from \"/home/runner/work/crocheting/crocheting/node_modules/react/jsx-runtime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","import 'antd/dist/antd.css';\nimport './App.scss';\n\nimport { useEffect, useReducer } from 'react';\n\nimport { Cell } from './Cell';\nimport { Grid } from './Grid';\n\nconst grid = new Grid(50, 40);\n\nfunction App() {\n  return (\n    <div className=\"grid\">\n      {grid.cells.flatMap((row, rowIdx) =>\n        row.map((cell, columnIdx) => (\n          <RenderCell key={`${rowIdx}_${columnIdx}}`} cell={cell} />\n        ))\n      )}\n    </div>\n  );\n}\n\nfunction RenderCell(props: { cell: Cell }) {\n  const rerender = useReducer((x) => x + 1, 0)[1];\n\n  useEffect(() => {\n    props.cell.update = rerender;\n    return () => (props.cell.update = undefined);\n  }, [rerender, props.cell]);\n\n  const classNames = [\"cell\"];\n  if (props.cell.isMarked) classNames.push(\"marked\");\n  if (props.cell.isCrossed) classNames.push(\"crossed\");\n  classNames.push(props.cell.isValid ? \"valid\" : \"invalid\");\n\n  return (\n    <div\n      onClick={() => {\n        props.cell.toggle();\n        rerender();\n      }}\n      id={`${props.cell.row}_${props.cell.column}`}\n      key={`${props.cell.row}_${props.cell.column}`}\n      style={{ top: props.cell.row * 32, left: props.cell.column * 32 }}\n      className={classNames.join(\" \")}\n    >\n      <span className=\"cell-text\">{props.cell.isCrossed ? \"x\" : \"\"}</span>\n    </div>\n  );\n}\n\nexport default App;\n","import { Cell } from './Cell';\n\nexport class Grid {\n  public cells: Cell[][] = [];\n\n  constructor(rows: number = 100, columns: number = 100) {\n    this.setDimensions(rows, columns);\n  }\n\n  public setDimensions(rows: number, columns: number) {\n    // resize arrays first\n    for (let row = 0; row < rows; row++) {\n      if (!this.cells[row]) this.cells[row] = [];\n\n      for (let column = 0; column < columns; column++) {\n        this.cells[row][column] =\n          this.cells[row][column] ?? new Cell(this, row, column);\n      }\n\n      if (this.cells[row].length > columns)\n        this.cells[row] = this.cells[row].slice(0, columns);\n    }\n\n    if (this.cells.length > rows) this.cells = this.cells.slice(0, rows);\n  }\n\n  public getCell(row: number, column: number): Cell | undefined {\n    return this.cells[row]?.[column];\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"names":["relList","document","createElement","supports","link","querySelectorAll","MutationObserver","mutations","mutation","type","node","addedNodes","tagName","rel","observe","childList","subtree","ep","fetchOpts","script","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","href","p","constructor","grid","row","column","isCrossed","toggle","isMarked","this","iterator","up","recalculateState","down","getCell","left","right","initialCrossed","initialValid","isValid","update","jsx","jsxRuntime.jsx","rows","columns","setDimensions","cells","Cell","length","slice","className","flatMap","rowIdx","map","cell","columnIdx","RenderCell","props","rerender","useReducer","x","undefined","classNames","push","onClick","id","style","top","join","ReactDOM","render","React","StrictMode","App","getElementById"],"mappings":"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"}